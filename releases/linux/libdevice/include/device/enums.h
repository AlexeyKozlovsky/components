#ifndef DIALTEK_LIBDEVICE_ENUMS_ENUMS_H_
#define DIALTEK_LIBDEVICE_ENUMS_ENUMS_H_

namespace device {

enum ErrorCode {
  SUCCESS = 0,
  MODBUS_ILLEGAL_FUNCTION = 1,
  MODBUS_ILLEGAL_DATA_ADDRESS = 2,
  MODBUS_ILLEGAL_DATA_VALUE = 3,
  MODBUS_SERVER_DEVICE_FAILURE = 4,
  MODBUS_ACKNOWLEDGE = 5,
  MODBUS_SERVER_DEVICE_BUSY = 6,
  MODBUS_NEGATIVE_ACKNOWLEDGE = 7,
  MODBUS_MEMORY_PARITY_ERROR = 8,
  MODBUS_GATEWAY_PATH_UNAVAILABLE = 10,
  MODBUS_GATEWAY_TARGET_DEVICE_FAILED_TO_RESPOND = 11,
  DEVICE_DOESNT_EXIST = 128,
  DEVICE_NOT_RESPONDING_TANGO = 129,
  DEVICE_TYPE_ERROR = 130,
  DEVICE_NOT_RESPONDING_LAN = 131,
  INVALID_RESPONSE = 252,
  INVALID_REQUEST = 251,
  CRC_ERROR = 250,
  OPERATION_INTERRUPTED = 255,

  DEVICE_DOESNT_HAVE_ATTRIBUTE = 132,
  DEVICE_ALREADY_EXISTS = 133,
  PROPERTY_OR_COMMAND_ALREADY_EXISTS = 134,
  UNABLE_TO_START_SERVER = 135,
  UNABLE_TO_STOP_SERVER = 136,
  DEVICE_NOT_INITIALIZED = 137
};

enum DeviceState {
  ON = 0,
  OFF = 1,
  OPEN = 2,
  CLOSE = 3,
  WAIT = 255,
};

namespace attrs {
  enum RequestType {
    READ = 0,
    WRITE = 1,
    EXECUTE = 2
  };
}

}

#endif //DIALTEK_LIBDEVICE_ENUMS_ENUMS_H_
